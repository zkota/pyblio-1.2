<!DocType Book PUBLIC "-//OASIS//DTD DocBook V3.1//EN" [

<!Entity pyb "pybliographer">
<!Entity pyc "pybliographic">

<!Entity gui    System "gui.sgml">
<!Entity script System "script.sgml"> 
<!Entity config System "config.sgml"> 
<!Entity styles System "styles.sgml"> 

<!Entity ref-iter   System "iterator.sgml"> 
<!Entity ref-db     System "database.sgml"> 
<!Entity ref-sel    System "selection.sgml"> 
<!Entity ref-key    System "key.sgml"> 
<!Entity ref-entry  System "entry.sgml"> 
<!Entity ref-url    System "url.sgml"> 
<!Entity ref-tester System "tester.sgml"> 
<!Entity ref-sort   System "sort.sgml"> 
]>

<Book lang="it">
  <bookinfo>
    <title>Pybliographer</title>
    
    <author>
      <firstname>Frédéric</firstname> <surname>Gobry</surname>
    </author>
    <abstract>
      <para>Pybliographer &egrave uno strumento per lavorare con database                                                               
      bibliografici. Fornisce una generica cornice di lavoro che pu&ograve essere usata
      per manipolare questi database con una semplice interfaccia grafica, ma                                                       
      pu&ograve anche essere facilmente esteso con un linguaggio di scripting                                                             
      per adattarsi a una vasta gamma di necessit&agrave . (Per segnalare errori di
      traduzione scrivere a Yuri Bongiorno &lt yurixATtiscali.it &gt)</para>
    </abstract>
  </bookinfo>
  
    &gui;
  
    &script;
  
    &config;
  
    &styles;


  <reference id="reference">
    <title>Class reference</title>

    <partintro>
      <para>Qui si trova l'elenco di tutte le classi basilari usate in
	&pyb;. Appartengono al modulo <classname>Pyblio</classname>
	e da qui sono importate e usate con un codice che assomiglia a:
	<programlisting> 
from Pyblio import Base, Open, Selection

entry = Base.Entry (...)

</programlisting></para>
    </partintro>

    <!-- Base -->
    &ref-db;
    &ref-entry;

    <!-- Fields -->
    &ref-url;

    <!-- Iterator -->
    &ref-iter;

    <!-- Key -->
    &ref-key;
    
    <!-- Search -->
    &ref-tester;

    <!-- Selection -->
    &ref-sel;

    <!-- Sort -->
    &ref-sort;

  </reference>

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-namecase-general:t
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"pyblio.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
